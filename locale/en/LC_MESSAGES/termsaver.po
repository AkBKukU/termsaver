# English translations for PACKAGE package.
# Copyright (C) 2012 THE PACKAGE'S COPYRIGHT HOLDER
# This file is distributed under the same license as the PACKAGE package.
# Automatically generated, 2012.
#
msgid ""
msgstr ""
"Project-Id-Version: PACKAGE VERSION\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2012-03-01 22:35+1000\n"
"PO-Revision-Date: 2012-03-01 22:35+1000\n"
"Last-Translator: Automatically generated\n"
"Language-Team: none\n"
"Language: en\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Plural-Forms: nplurals=2; plural=(n != 1);\n"

#: termsaverlib/screen/quotes4all.py:86
msgid "displays recent quotes from quotes4all.net"
msgstr "displays recent quotes from quotes4all.net"

#: termsaverlib/screen/asciiartfarts.py:82
msgid "displays ascii images from asciiartfarts.com (NSFW)"
msgstr "displays ascii images from asciiartfarts.com (NSFW)"

#: termsaverlib/screen/rssfeed.py:74
msgid "displays rss feed information"
msgstr "displays rss feed information"

#: termsaverlib/screen/rssfeed.py:91
#, python-format
msgid ""
"\n"
"You just need to provide the URL of the RSS feed from where %(app_title)s will\n"
"read and display on screen.\n"
"\n"
"If you do not have any idea which RSS to use, check out some examples here:\n"
"\n"
"    CNN\n"
"        Top Stories - http://rss.cnn.com/rss/edition.rss\n"
"        World       - http://rss.cnn.com/rss/edition_world.rss\n"
"        Technology  - http://rss.cnn.com/rss/edition_technology.rss\n"
"\n"
"        See CNN's complete list of RSS syndication here:\n"
"            http://edition.cnn.com/services/rss/\n"
"\n"
"    Lifehacker - http://www.lifehacker.com/index.xml\n"
"    Note: Lifehacker uses HTML to deliver \"description\" contents in the RSS,\n"
"          so you might need to change the format to something like:\n"
"               --format \"%%(title)s (%%(pubDate)s)\\n\"\n"
msgstr ""
"\n"
"You just need to provide the URL of the RSS feed from where %(app_title)s will\n"
"read and display on screen.\n"
"\n"
"If you do not have any idea which RSS to use, check out some examples here:\n"
"\n"
"    CNN\n"
"        Top Stories - http://rss.cnn.com/rss/edition.rss\n"
"        World       - http://rss.cnn.com/rss/edition_world.rss\n"
"        Technology  - http://rss.cnn.com/rss/edition_technology.rss\n"
"\n"
"        See CNN's complete list of RSS syndication here:\n"
"            http://edition.cnn.com/services/rss/\n"
"\n"
"    Lifehacker - http://www.lifehacker.com/index.xml\n"
"    Note: Lifehacker uses HTML to deliver \"description\" contents in the RSS,\n"
"          so you might need to change the format to something like:\n"
"               --format \"%%(title)s (%%(pubDate)s)\\n\"\n"

#: termsaverlib/screen/helper/urlfetcher.py:101
msgid "URL can not be blank"
msgstr "URL can not be blank"

#: termsaverlib/screen/helper/urlfetcher.py:105
#: termsaverlib/screen/helper/urlfetcher.py:122
msgid "URL does not seem valid"
msgstr "URL does not seem valid"

#: termsaverlib/screen/helper/urlfetcher.py:156
#, python-format
msgid "Connecting to %s ... (this could take a while)"
msgstr "Connecting to %s ... (this could take a while)"

#: termsaverlib/screen/helper/urlfetcher.py:164
#, python-format
msgid "Fetched URL returned error %d."
msgstr "Fetched URL returned error %d."

#: termsaverlib/screen/helper/urlfetcher.py:167
#, python-format
msgid "Could not fetch URL, because %s"
msgstr "Could not fetch URL, because %s"

#: termsaverlib/screen/helper/urlfetcher.py:175
msgid "Fetched data is binary."
msgstr "Fetched data is binary."

#: termsaverlib/screen/randtxt.py:87
msgid "displays word in random places on screen"
msgstr "displays word in random places on screen"

#: termsaverlib/screen/randtxt.py:126
#, python-format
msgid ""
"\n"
"Options:\n"
"\n"
" -w, --word   Sets the word to be displayed\n"
"              default is the name of this application\n"
" -d, --delay  Sets how long the word will be displayed before\n"
"              randomized again. Default is%(default_delay)s of a second\n"
" -h, --help   Displays this help message\n"
"\n"
"Example:\n"
"\n"
"    $ %(app_name)s %(screen)s\n"
"    This will trigger the screensaver to display the default word %(app_title)s\n"
"    in random locations of the screen\n"
"\n"
"    $ %(app_name)s %(screen)s -w FooBar\n"
"    This will trigger the screensaver to display the default word FooBar\n"
"    in random locations of the screen\n"
msgstr ""
"\n"
"Options:\n"
"\n"
" -w, --word   Sets the word to be displayed\n"
"              default is the name of this application\n"
" -d, --delay  Sets how long the word will be displayed before\n"
"              randomized again. Default is%(default_delay)s of a second\n"
" -h, --help   Displays this help message\n"
"\n"
"Example:\n"
"\n"
"    $ %(app_name)s %(screen)s\n"
"    This will trigger the screensaver to display the default word %(app_title)s\n"
"    in random locations of the screen\n"
"\n"
"    $ %(app_name)s %(screen)s -w FooBar\n"
"    This will trigger the screensaver to display the default word FooBar\n"
"    in random locations of the screen\n"

#: termsaverlib/screen/randtxt.py:181 termsaverlib/screen/base/rssfeed.py:220
#: termsaverlib/screen/base/rssfeed.py:323
#: termsaverlib/screen/base/filereader.py:209
#: termsaverlib/screen/base/urlfetcher.py:179
#: termsaverlib/screen/base/urlfetcher.py:240 termsaverlib/screen/dot.py:175
msgid "Unhandled option. See --help for details."
msgstr "Unhandled option. See --help for details."

#: termsaverlib/screen/base/__init__.py:304
#, python-format
msgid ""
"Screen: %(screen)s\n"
"Description: %(description)s\n"
"\n"
"Usage: %(app_name)s %(screen)s [options]"
msgstr ""
"Screen: %(screen)s\n"
"Description: %(description)s\n"
"\n"
"Usage: %(app_name)s %(screen)s [options]"

#: termsaverlib/screen/base/rssfeed.py:162
#, python-format
msgid ""
"\n"
"Options:\n"
"\n"
" -h,  --help   Displays this help message\n"
" -u,  --url    The URL path of the RSS feed (text) to be displayed\n"
" -f, --format  The printing format according to values available in RSS feed:\n"
"                   * pubDate\n"
"                   * title\n"
"                   * link\n"
"                   * description\n"
"               You must use python dictionary based formatting style\n"
"               (see examples for details)\n"
"\n"
"Example:\n"
"\n"
"    $ %(app_name)s %(screen)s -u http://rss.cnn.com/rss/edition.rss\n"
"    This will trigger the screensaver to fetch the contents from the CNN feed\n"
"    and display it in default formatting: '%%(title)s (%%(pubDate)s)\\n'\n"
"\n"
"    $ %(app_name)s %(screen)s -u http://rss.cnn.com/rss/edition.rss \\\n"
"        -f '%%(title)s (%%(pubDate)s)\\n%%(description)s\\n%%(link)s'\n"
"    This will trigger the screensaver to fetch the contents from the CNN feed\n"
"    and display all contents as specified in the formatting.\n"
msgstr ""
"\n"
"Options:\n"
"\n"
" -h,  --help   Displays this help message\n"
" -u,  --url    The URL path of the RSS feed (text) to be displayed\n"
" -f, --format  The printing format according to values available in RSS feed:\n"
"                   * pubDate\n"
"                   * title\n"
"                   * link\n"
"                   * description\n"
"               You must use python dictionary based formatting style\n"
"               (see examples for details)\n"
"\n"
"Example:\n"
"\n"
"    $ %(app_name)s %(screen)s -u http://rss.cnn.com/rss/edition.rss\n"
"    This will trigger the screensaver to fetch the contents from the CNN feed\n"
"    and display it in default formatting: '%%(title)s (%%(pubDate)s)\\n'\n"
"\n"
"    $ %(app_name)s %(screen)s -u http://rss.cnn.com/rss/edition.rss \\\n"
"        -f '%%(title)s (%%(pubDate)s)\\n%%(description)s\\n%%(link)s'\n"
"    This will trigger the screensaver to fetch the contents from the CNN feed\n"
"    and display all contents as specified in the formatting.\n"

#: termsaverlib/screen/base/rssfeed.py:248
msgid "There was an error while using your format."
msgstr "There was an error while using your format."

#: termsaverlib/screen/base/filereader.py:154
#, python-format
msgid ""
"\n"
"Options:\n"
"\n"
" -p, --path   Sets the location to search for text-based source files.\n"
"              this option is mandatory.\n"
" -d, --delay  Sets the speed of the displaying characters\n"
"              default is%(default_delay)s of a second\n"
" -h, --help   Displays this help message\n"
"\n"
"Examples:\n"
"\n"
"    $ %(app_name)s %(screen)s -p /path/to/my/code\n"
"    This will trigger the screensaver to read all files in the path selected\n"
"\n"
"    $ %(app_name)s %(screen)s -p /path/to/my/code -d 0\n"
"    This will trigger the screensaver to read all files in the path selected\n"
"    with no delay (too fast for a screensaver, but it's your choice that\n"
"    matters!)\n"
msgstr ""
"\n"
"Options:\n"
"\n"
" -p, --path   Sets the location to search for text-based source files.\n"
"              this option is mandatory.\n"
" -d, --delay  Sets the speed of the displaying characters\n"
"              default is%(default_delay)s of a second\n"
" -h, --help   Displays this help message\n"
"\n"
"Examples:\n"
"\n"
"    $ %(app_name)s %(screen)s -p /path/to/my/code\n"
"    This will trigger the screensaver to read all files in the path selected\n"
"\n"
"    $ %(app_name)s %(screen)s -p /path/to/my/code -d 0\n"
"    This will trigger the screensaver to read all files in the path selected\n"
"    with no delay (too fast for a screensaver, but it's your choice that\n"
"    matters!)\n"

#: termsaverlib/screen/base/filereader.py:206
msgid "Make sure the file or directory exists."
msgstr "Make sure the file or directory exists."

#: termsaverlib/screen/base/filereader.py:214
#: termsaverlib/screen/base/urlfetcher.py:184
msgid "It is mandatory option"
msgstr "It is mandatory option"

#: termsaverlib/screen/base/urlfetcher.py:122
#, python-format
msgid ""
"\n"
"Options:\n"
"\n"
" -u, --url    Defines the URL location from where the information\n"
"              should be fetched, then displayed.\n"
"              This option is MANDATORY.\n"
" -d, --delay  Sets the speed of the displaying characters\n"
"              default is 0.003 of a second (advised to keep\n"
"              between 0.01 and 0.001).\n"
" -h, --help   Displays this help message\n"
"\n"
"Examples:\n"
"\n"
"    $ %(app_name)s %(screen)s -u www.google.com\n"
"    This will trigger the screensaver to fetch the HTML contents of this web\n"
"    site and display progressively.\n"
"\n"
"    $ %(app_name)s %(screen)s -u www.google.com -d 0\n"
"    This will trigger the screensaver to fetch the HTML contents of this web\n"
"    site with no delay (too fast for a screensaver, but it's your choice that\n"
"    matters!)\n"
msgstr ""
"\n"
"Options:\n"
"\n"
" -u, --url    Defines the URL location from where the information\n"
"              should be fetched, then displayed.\n"
"              This option is MANDATORY.\n"
" -d, --delay  Sets the speed of the displaying characters\n"
"              default is 0.003 of a second (advised to keep\n"
"              between 0.01 and 0.001).\n"
" -h, --help   Displays this help message\n"
"\n"
"Examples:\n"
"\n"
"    $ %(app_name)s %(screen)s -u www.google.com\n"
"    This will trigger the screensaver to fetch the HTML contents of this web\n"
"    site and display progressively.\n"
"\n"
"    $ %(app_name)s %(screen)s -u www.google.com -d 0\n"
"    This will trigger the screensaver to fetch the HTML contents of this web\n"
"    site with no delay (too fast for a screensaver, but it's your choice that\n"
"    matters!)\n"

#: termsaverlib/screen/dot.py:69
msgid "displays a random running dot"
msgstr "displays a random running dot"

#: termsaverlib/screen/dot.py:120
#, python-format
msgid ""
"\n"
"Options:\n"
"\n"
" -c, --char   Sets the character to be showing up\n"
"              default is X\n"
" -d, --delay  Sets the speed of the displaying characters\n"
"              default is 0.05 of a second (advised to keep\n"
"              between 0.1 and 0.01).\n"
" -h, --help   Displays this help message\n"
"\n"
"Example:\n"
"\n"
"    $ %(app_name)s %(screen)s\n"
"    This will trigger the screensaver to display a dot on screen, with random\n"
"    size increase.\n"
"\n"
"    $ %(app_name)s %(screen)s -c +\n"
"    Overrides the default dot (.) character to be a plus sign (+)\n"
"\n"
msgstr ""
"\n"
"Options:\n"
"\n"
" -c, --char   Sets the character to be showing up\n"
"              default is X\n"
" -d, --delay  Sets the speed of the displaying characters\n"
"              default is 0.05 of a second (advised to keep\n"
"              between 0.1 and 0.01).\n"
" -h, --help   Displays this help message\n"
"\n"
"Example:\n"
"\n"
"    $ %(app_name)s %(screen)s\n"
"    This will trigger the screensaver to display a dot on screen, with random\n"
"    size increase.\n"
"\n"
"    $ %(app_name)s %(screen)s -c +\n"
"    Overrides the default dot (.) character to be a plus sign (+)\n"
"\n"

#: termsaverlib/screen/rfc.py:99
msgid "randomly displays RFC contents"
msgstr "randomly displays RFC contents"

#: termsaverlib/screen/programmer.py:69
msgid "displays source code in typing animation"
msgstr "displays source code in typing animation"

#: termsaverlib/screen/programmer.py:78
#, python-format
msgid ""
"\n"
"You just need to provide the path to the location from where %(app_title)s will\n"
"read and display on screen.\n"
"\n"
"If you do not have any code in your local machine, just get some interesting\n"
"project from the Internet, such as Django (http://www.djangoproject.com):\n"
"\n"
"    If you have access to subversion, you may download it at:\n"
"        svn co https://code.djangoproject.com/svn/django/trunk/ django-trunk\n"
"\n"
"    Or, just download the zipped source and unpack it on your local machine:\n"
"        https://www.djangoproject.com/download/\n"
msgstr ""
"\n"
"You just need to provide the path to the location from where %(app_title)s will\n"
"read and display on screen.\n"
"\n"
"If you do not have any code in your local machine, just get some interesting\n"
"project from the Internet, such as Django (http://www.djangoproject.com):\n"
"\n"
"    If you have access to subversion, you may download it at:\n"
"        svn co https://code.djangoproject.com/svn/django/trunk/ django-trunk\n"
"\n"
"    Or, just download the zipped source and unpack it on your local machine:\n"
"        https://www.djangoproject.com/download/\n"

#: termsaverlib/screen/urlfetcher.py:56
msgid "displays url contents with typing animation"
msgstr "displays url contents with typing animation"

#: termsaverlib/screen/urlfetcher.py:61
#, python-format
msgid ""
"\n"
"You just need to provide the URL from where %(app_title)s will read and\n"
"display on screen.\n"
"\n"
"If you do not have any idea which URL to use, check out some examples here:\n"
"\n"
"    RFC\n"
"        RFC-1034 - http://tools.ietf.org/rfc/rfc1034.txt\n"
"\n"
"        See a RFC list from Wikipedia:\n"
"            http://en.wikipedia.org/wiki/List_of_RFCs\n"
"        (remember to use the txt version)\n"
"\n"
msgstr ""
"\n"
"You just need to provide the URL from where %(app_title)s will read and\n"
"display on screen.\n"
"\n"
"If you do not have any idea which URL to use, check out some examples here:\n"
"\n"
"    RFC\n"
"        RFC-1034 - http://tools.ietf.org/rfc/rfc1034.txt\n"
"\n"
"        See a RFC list from Wikipedia:\n"
"            http://en.wikipedia.org/wiki/List_of_RFCs\n"
"        (remember to use the txt version)\n"
"\n"

#: termsaverlib/screen/jokes4all.py:83
msgid "displays recent jokes from jokes4all.net (NSFW)"
msgstr "displays recent jokes from jokes4all.net (NSFW)"
